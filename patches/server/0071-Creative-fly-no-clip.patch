From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Tue, 27 Jun 2023 09:26:58 +0800
Subject: [PATCH] Creative fly no clip


diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 58152160d609d0e9d105153aeb166a56a7955603..352ef747063f9cb1a26bf906f8cb52351ec4ae1d 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -242,8 +242,8 @@ public abstract class Player extends LivingEntity {
 
     @Override
     public void tick() {
-        this.noPhysics = this.isSpectator();
-        if (this.isSpectator()) {
+        this.noPhysics = this.isCreativeFlyOrSpectator(); // Iron - creative no clip
+        if (this.isCreativeFlyOrSpectator()) { // Iron - creative no clip
             this.setOnGround(false);
         }
 
@@ -415,7 +415,7 @@ public abstract class Player extends LivingEntity {
 
             Pose entitypose1;
 
-            if (!this.isSpectator() && !this.isPassenger() && !this.canEnterPose(entitypose)) {
+            if (!this.isCreativeFlyOrSpectator() && !this.isPassenger() && !this.canEnterPose(entitypose)) { // Iron - creative no clip
                 if (this.canEnterPose(Pose.CROUCHING)) {
                     entitypose1 = Pose.CROUCHING;
                 } else {
@@ -576,7 +576,7 @@ public abstract class Player extends LivingEntity {
         }
 
         this.bob += (f - this.bob) * 0.4F;
-        if (this.getHealth() > 0.0F && !this.isSpectator()) {
+        if (this.getHealth() > 0.0F && !this.isCreativeFlyOrSpectator()) { // Iron - creative no clip
             AABB axisalignedbb;
 
             if (this.isPassenger() && !this.getVehicle().isRemoved()) {
@@ -2130,6 +2130,12 @@ public abstract class Player extends LivingEntity {
     @Override
     public abstract boolean isSpectator();
 
+    // Iron start - creative no clip
+    public boolean isCreativeFlyOrSpectator() {
+        return isSpectator() || (top.Ironmc.Iron.IronConfig.creativeNoClip && isCreative() && getAbilities().flying);
+    }
+    // Iron end - creative no clip
+
     @Override
     public boolean canBeHitByProjectile() {
         return !this.isSpectator() && super.canBeHitByProjectile();
diff --git a/src/main/java/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
index 25a9c38c60d183bb65b14f4d7550ab98b431c218..118a5b4c0a5268d52c69b0cfd061dbccfacf81b4 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity.java
@@ -151,7 +151,7 @@ public class ShulkerBoxBlockEntity extends RandomizableContainerBlockEntity impl
                 for (int i = 0; i < list.size(); ++i) {
                     Entity entity = (Entity) list.get(i);
 
-                    if (entity.getPistonPushReaction() != PushReaction.IGNORE) {
+                    if (entity.getPistonPushReaction() != PushReaction.IGNORE  && !(entity instanceof Player player && player.isCreativeFlyOrSpectator())) { // Iron - creative no clip
                         entity.move(MoverType.SHULKER_BOX, new Vec3((axisalignedbb.getXsize() + 0.01D) * (double) enumdirection.getStepX(), (axisalignedbb.getYsize() + 0.01D) * (double) enumdirection.getStepY(), (axisalignedbb.getZsize() + 0.01D) * (double) enumdirection.getStepZ()));
                     }
                 }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java
index d9baa85962236c42219cf09d4f3129be93ff069c..c1bd06fbc2c5683888f7264c35c25feb31b00d67 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity.java
@@ -19,6 +19,7 @@ import net.minecraft.util.Mth;
 import net.minecraft.util.RandomSource;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntitySelector;
+import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.ThrownEnderpearl;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.ChunkPos;
@@ -128,7 +129,7 @@ public class TheEndGatewayBlockEntity extends TheEndPortalBlockEntity {
     }
 
     public static boolean canEntityTeleport(Entity entity) {
-        return EntitySelector.NO_SPECTATORS.test(entity) && !entity.getRootVehicle().isOnPortalCooldown();
+        return EntitySelector.NO_SPECTATORS.test(entity) && !entity.getRootVehicle().isOnPortalCooldown() && !(entity instanceof Player player && player.isCreativeFlyOrSpectator()); // Iron - creative no clip
     }
 
     public boolean isSpawning() {
diff --git a/src/main/java/top/Ironmc/Iron/IronConfig.java b/src/main/java/top/Ironmc/Iron/IronConfig.java
index c69a2efafd31b2367cc9f20652585a801eecea0c..9badc03ac95064824a8dc3e8fbc74b88d6939d2e 100644
--- a/src/main/java/top/Ironmc/Iron/IronConfig.java
+++ b/src/main/java/top/Ironmc/Iron/IronConfig.java
@@ -594,6 +594,7 @@ public final class IronConfig {
     }
 
     public static void registerCarpetRules() {
+        CarpetRules.rules.put("creativeNoClip", new CarpetRule("carpet", "creativeNoClip", Boolean.toString(creativeNoClip)));
     }
 
     public static boolean creativeNoClip = false;
